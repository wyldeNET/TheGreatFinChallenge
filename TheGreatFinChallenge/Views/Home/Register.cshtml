@model RegisterData;
@{
    ViewData["Title"] = "Register";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
    var pError = TempData["PasswordError"] as string;
    var eError = TempData["EmailError"] as string;
    var prError = TempData["PasswordReqError"] as string;
}

<div class="d-flex justify-content-center contentHeight">
    <div class="align-self-center">
        <div class="p-5 rounded footerLogin">
            <form action="~/register" method="post">
                <h1 class="text-center">Register</h1>
                <p class="hint-text text-center pb-3">Create your account. It's free and only takes a minute.</p>
                <div class="form-group">
                    <div class="row">
                        <div class="col"><input type="text" class="form-control" name="firstName" placeholder="First Name" required="required"></div>
                        <div class="col"><input type="text" class="form-control" name="lastName" placeholder="Last Name" required="required"></div>
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(eError))
                {
                    <div class="form-group">
                        <div class="row">
                            <div class="col">
                                <input type="email" class="form-control is-invalid" name="email" aria-describedby="emailHelp" placeholder="Email" required="required">
                                <small id="emailHelp" class="form-text invalid-feedback">@eError</small>
                            </div>
                            <div class="col">
                                <select name="groupId" class="form-control" id="groupNameSelector" required>
                                    <option value="">Kies een groep:</option>
                                    @foreach (var group in Model.Groups)
                                    {
                                        if (group.GroupName != "Ranking")
                                        {
                                            <option value="@group.pk_GroupID">@group.GroupName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group">
                        <div class="row">
                            <div class="col">
                                <input type="email" class="form-control" name="email" aria-describedby="emailHelp" placeholder="Email" required="required">
                            </div>
                            <div class="col">
                                <select name="groupId" class="form-control" id="groupNameSelector" required>
                                    <option value="">Kies een groep:</option>
                                    @foreach (var group in Model.Groups)
                                    {
                                        if (group.GroupName != "Ranking")
                                        {
                                            <option value="@group.pk_GroupID">@group.GroupName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                }

                <div class="row">
                    <div class="col-md-7">

                        @if (!string.IsNullOrEmpty(pError))
                        {
                            <div class="form-group">
                                <input type="password" class="form-control is-invalid" aria-describedby="passwordHelp1" name="nonHashedPassword" placeholder="Password" required="required">
                                <small id="passwordHelp1" class="form-text invalid-feedback">@pError</small>
                            </div>
                            <div class="form-group">
                                <input type="password" aria-describedby="passwordHelp2" class="form-control is-invalid" name="confirm_nonHashedPassword" placeholder="Confirm Password" required="required">
                                <small id="passwordHelp2" class="form-text invalid-feedback">@pError</small>
                            </div>
                        }
                        else if (!string.IsNullOrEmpty(prError))
                        {
                            <div class="form-group">
                                <input type="password" class="form-control is-invalid" aria-describedby="passwordHelp1" name="nonHashedPassword" placeholder="Password" required="required">
                                <small id="passwordHelp1" class="form-text invalid-feedback">@prError</small>
                            </div>
                            <div class="form-group">
                                <input type="password" aria-describedby="passwordHelp2" class="form-control is-invalid" name="confirm_nonHashedPassword" placeholder="Confirm Password" required="required">
                                <small id="passwordHelp2" class="form-text invalid-feedback">@prError</small>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                <input type="password" class="form-control" name="nonHashedPassword" placeholder="Password" required="required">
                            </div>
                            <div class="form-group">
                                <input type="password" class="form-control" name="confirm_nonHashedPassword" placeholder="Confirm Password" required="required">
                            </div>
                        }
                    </div>

                    <div class="col-md-5 mb-4">
                        <p class="mb-2">Password requirements</p>
                        <p class="small text-muted mb-2">To create a password, you have to meet the following requirements:</p>
                        <ul class="small @(!string.IsNullOrEmpty(prError)?"text-danger":"text-muted")  pl-4 mb-0">
                            <li>Minimum 8 character</li>
                            <li>At least one special character</li>
                            <li>At least one number</li>
                        </ul>
                    </div>
                </div>

                <div class="form-group">
                    <button type="submit" value="register" class="btn btn-success btn-lg w-100">Register Now</button>
                </div>
            </form>
        </div>
    </div>
</div>